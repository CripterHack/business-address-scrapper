version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/workspace:cached
      - ~/.gitconfig:/home/vscode/.gitconfig
      - ~/.ssh:/home/vscode/.ssh
    command: sleep infinity
    environment:
      - PYTHONPATH=/workspace
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=business_scraper
      - DB_USER=postgres
      - DB_PASSWORD=devpassword123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_TYPE=redis
    ports:
      - "8501:8501"  # Streamlit
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - scraper-network

  db:
    image: postgres:15
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    environment:
      POSTGRES_PASSWORD: devpassword123
      POSTGRES_DB: business_scraper
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - scraper-network

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - scraper-network

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    networks:
      - scraper-network

networks:
  scraper-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  pgadmin-data: 